// Generated by CoffeeScript 1.6.3
(function() {
  var Animal, Cat, Fish, Mouse, ajax, robert, tom,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Animal = (function() {
    function Animal(name, food) {
      this.name = name;
      this.food = food;
    }

    Animal.prototype.eat = function(food) {
      var i, _i, _len, _results;
      food = food != null ? food : this.food;
      _results = [];
      for (_i = 0, _len = food.length; _i < _len; _i++) {
        i = food[_i];
        _results.push(console.log(this.name + ' is eating ' + i));
      }
      return _results;
    };

    Animal.prototype.run = function() {};

    Animal.prototype.dance = function() {
      return console.log(this.name + ' is dancing');
    };

    Animal.prototype.move = function(movement) {
      return console.log(this.name + ' is ' + movement);
    };

    return Animal;

  })();

  Cat = (function(_super) {
    __extends(Cat, _super);

    function Cat(name, food) {
      this.name = name;
      this.food = food;
    }

    Cat.prototype.kill = function(animal) {
      return console.log(this.name + ' is killing ' + animal);
    };

    Cat.prototype.eat = function(animal) {
      var food;
      if (animal == null) {
        food = this.food;
      } else {
        this.kill(animal.name);
        food = [animal.name];
      }
      return Cat.__super__.eat.call(this, food);
    };

    Cat.prototype.attack = function(animal) {
      animal = animal != null ? animal : null;
      if (animal != null) {
        console.log(this.name + ' is attacking ' + animal.name);
      }
      return this.eat(animal);
    };

    Cat.prototype.move = function() {
      return Cat.__super__.move.call(this, 'running');
    };

    return Cat;

  })(Animal);

  Mouse = (function(_super) {
    __extends(Mouse, _super);

    function Mouse(name, food) {
      this.name = name;
      this.food = food;
    }

    Mouse.prototype.move = function() {
      return Mouse.__super__.move.call(this, 'scurrying');
    };

    return Mouse;

  })(Animal);

  Fish = (function(_super) {
    __extends(Fish, _super);

    function Fish(name, food) {
      this.name = name;
      this.food = food;
    }

    Fish.prototype.move = function() {
      return Fish.__super__.move.call(this, 'swimming');
    };

    Fish.prototype.eat = function(animal) {
      var food, _ref;
      food = (_ref = [animal.name]) != null ? _ref : this.food;
      return Fish.__super__.eat.call(this, food);
    };

    return Fish;

  })(Animal);

  tom = new Mouse('Tom', ['cheese', 'dirt']);

  tom.eat();

  tom.move();

  ajax = new Cat('Ajax', ['fish', 'mouse', 'bug', 'bird']);

  ajax.attack(tom);

  ajax.move();

  ajax.dance();

  robert = new Fish('Robert', ['plankton']);

  robert.eat(robert);

  robert.move();

}).call(this);
